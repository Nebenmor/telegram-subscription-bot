const MESSAGES = {
  GROUP_WELCOME: `ü§ñ Bot added successfully!

üìù **Setup Required**
The admin needs to configure payment details before users can subscribe.

üë§ Please send me a private message to complete the setup.`,

  ADMIN_WELCOME: `üëã Welcome Admin!

You can manage multiple groups with this bot. Each group needs its own payment configuration.

üìã **Commands:**
‚Ä¢ /setup - Configure a new group or view existing groups
‚Ä¢ /groups - View all your groups

Let's get started!`,

  SETUP_INCOMPLETE: `‚ö†Ô∏è Setup not complete!

Please ask the admin to complete the bot configuration first.`,

  USER_WELCOME: `üí∞ **Choose Your Subscription**

Select a group to join from the options below:`,

  GROUP_SELECTION_TEXT: (groupName, price) =>
    `üí∞ **${groupName}**\nPrice: ${price}`,

  PAYMENT_DETAILS: (groupName, config) => `üí∞ **Payment Details - ${groupName}**

üè¶ **Bank Details:**
‚Ä¢ Bank: ${config.bankName}
‚Ä¢ Account Name: ${config.accountName}  
‚Ä¢ Account Number: ${config.accountNumber}
‚Ä¢ Amount: ${config.price}

üì± **Instructions:**
1. Make payment to the above account
2. Take a screenshot of your receipt
3. Upload the receipt here
4. Click "I have made payment" button

‚ö†Ô∏è **Important:** Upload your payment receipt before clicking the confirmation button.`,

  PAYMENT_CONFIRMED: `‚úÖ **Payment Confirmation Received**

Your payment has been submitted for verification. The admin will add you to the group shortly.

Please wait for confirmation.`,

  ADMIN_PAYMENT_NOTIFICATION: (
    groupName
  ) => `üí≥ **New Payment Received - ${groupName}**

A user has confirmed payment and is waiting to be added to the group.`,

  USER_ADDED_SUCCESS: `üéâ **Welcome to the group!**

Your subscription is now active. You will be automatically removed when it expires.

Enjoy your access!`,

  USER_EXPIRED: `‚è∞ **Subscription Expired**

Your subscription has ended. You have been removed from the group.

Contact the admin to renew your subscription.`,

  SETUP_COMPLETE: `‚úÖ **Setup Complete!**

Your group is now configured and ready to accept subscriptions.

Users can now interact with the bot to subscribe to your group.`,

  INVALID_COMMAND: `‚ùå Invalid command. Please use the available buttons or commands.`,

  ERROR: `‚ö†Ô∏è Something went wrong. Please try again later.`,

  NO_GROUPS_AVAILABLE: `‚ùå No subscription services are currently available.

Please try again later.`,

  GROUP_LIST_HEADER: `üìã **Your Groups**

Here are all the groups you manage:`,

  GROUP_STATUS: (group) => {
    const status = group.isSetupComplete ? "‚úÖ Active" : "‚ö†Ô∏è Setup Needed";
    const userInfo = group.isSetupComplete
      ? `\nüë• ${group.activeUsers || 0} active users`
      : "";
    return `**${group.groupName}**\nStatus: ${status}${userInfo}\nPrice: ${
      group.config.price || "Not set"
    }`;
  },

  SETUP_GROUP_SELECTION: `üèóÔ∏è **Setup Group**

Select a group to configure:`,

  SETUP_START: (groupName) => `üè¶ **Setting up: ${groupName}**

I'll need the following information:

1Ô∏è‚É£ Bank Name
2Ô∏è‚É£ Account Name  
3Ô∏è‚É£ Account Number
4Ô∏è‚É£ Subscription Price

Let's start with the bank name:`,

  SETUP_STEP: {
    BANK_NAME: "üè¶ **Step 1/4: Bank Name**\n\nPlease enter the bank name:",
    ACCOUNT_NAME:
      "üë§ **Step 2/4: Account Name**\n\nPlease enter the account name:",
    ACCOUNT_NUMBER:
      "üî¢ **Step 3/4: Account Number**\n\nPlease enter the account number:",
    PRICE:
      "üí∞ **Step 4/4: Subscription Price**\n\nPlease enter the subscription price (e.g., $10, ‚Ç¶5000):",
  },

  NO_GROUPS_FOUND: `‚ùå No groups found. 

Please add me to a group first, then try the setup command.`,

  CURRENT_CONFIG: (group) => `üìã **Current Configuration - ${group.groupName}**

üè¶ Bank: ${group.config.bankName || "Not set"}
üë§ Account Name: ${group.config.accountName || "Not set"}
üî¢ Account Number: ${group.config.accountNumber || "Not set"}
üí∞ Price: ${group.config.price || "Not set"}

üë• Active Users: ${
    Object.values(group.users || {}).filter((u) => u.isActive).length
  }

To update configuration, use /setup and select this group.`,
};

const KEYBOARDS = {
  PAYMENT_CONFIRM: (groupId) => ({
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "‚úÖ I have made payment",
            callback_data: `confirm_payment_${groupId}`,
          },
        ],
        [{ text: "üîô Back to groups", callback_data: "back_to_groups" }],
      ],
    },
  }),

  GROUP_SELECTION: (groups) => ({
    reply_markup: {
      inline_keyboard: groups.map((group) => [
        {
          text: `üí∞ ${group.groupName} - ${group.config.price}`,
          callback_data: `select_group_${group.groupId}`,
        },
      ]),
    },
  }),

  ADMIN_GROUP_LIST: (groups) => ({
    reply_markup: {
      inline_keyboard: [
        ...groups.map((group) => [
          {
            text: `${group.isSetupComplete ? "‚úÖ" : "‚ö†Ô∏è"} ${group.groupName}`,
            callback_data: `admin_group_${group.groupId}`,
          },
        ]),
        [{ text: "üîÑ Refresh", callback_data: "refresh_groups" }],
      ],
    },
  }),

  ADMIN_GROUP_ACTIONS: (groupId) => ({
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "‚öôÔ∏è Configure Group",
            callback_data: `setup_group_${groupId}`,
          },
        ],
        [{ text: "üîô Back to Groups", callback_data: "back_to_admin_groups" }],
      ],
    },
  }),

  SETUP_GROUP_SELECTION: (groups) => ({
    reply_markup: {
      inline_keyboard: [
        ...groups.map((group) => [
          {
            text: `${group.isSetupComplete ? "‚úÖ" : "‚ö†Ô∏è"} ${group.groupName}`,
            callback_data: `setup_group_${group.groupId}`,
          },
        ]),
        [{ text: "üîô Cancel", callback_data: "cancel_setup" }],
      ],
    },
  }),

  ADMIN_USER_MANAGEMENT: (userId, username, groupId) => ({
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "‚úÖ User Added to Group",
            callback_data: `user_added_${userId}_${groupId}`,
          },
        ],
        [
          {
            text: "‚ùå Payment Rejected",
            callback_data: `user_rejected_${userId}_${groupId}`,
          },
        ],
      ],
    },
  }),

  BACK_TO_GROUPS: {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üîô Back to Groups", callback_data: "back_to_groups" }],
      ],
    },
  },
};

const SETUP_STEPS = {
  GROUP_NAME: "group_name",
  BANK_NAME: "bank_name",
  ACCOUNT_NAME: "account_name",
  ACCOUNT_NUMBER: "account_number",
  PRICE: "price",
  COMPLETE: "complete",
};

module.exports = {
  MESSAGES,
  KEYBOARDS,
  SETUP_STEPS,
};
